plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.college'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // ✅ Spring Boot Starter Dependencies
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // ✅ Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // ✅ BCrypt Password Encoder Support
    implementation 'org.springframework.security:spring-security-crypto'
    
    implementation 'com.razorpay:razorpay-java:1.4.0' // RAZORPAY PAYMENT DEPENDENCY

    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // Jackson for JSON processing

    // ✅ MySQL Connector
    runtimeOnly 'com.mysql:mysql-connector-j'

    // ✅ Development Only (Optional)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // ✅ Testing Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// Ensure Java parameters are included
tasks.withType(JavaCompile).configureEach {
    options.compilerArgs.add("-parameters")
}

// Use JUnit Platform
tasks.named('test') {
    useJUnitPlatform()
}
